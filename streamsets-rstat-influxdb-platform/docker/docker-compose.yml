# =======================================================================
# Platform Name            hslu-data-platform
# Platform Stack:          trivadis/platys-modern-data-platform
# Platform Stack Version:  1.14.0-preview
# =======================================================================
version: '3.5'
networks:
  default:
    name: hslu-data-platform
# backward compatiblity to platform < 1.14.0
# Enable PostgreSQL or MySQL for MLflow server
services:
  #  ================================== StreamSets DataCollector Cloud ========================================== #
  streamsets-cloud-1:
    image: streamsets/datacollector:4.3.0
    container_name: streamsets-cloud-1
    hostname: streamsets-cloud-1
    labels:
      com.platys.name: streamsets-cloud
    environment:
      STREAMSETS_DEPLOYMENT_SCH_URL: https://eu01.hub.streamsets.com
      STREAMSETS_DEPLOYMENT_ID: ${STREAMSETS_CLOUD_DEPLOYMENT_ID}
      STREAMSETS_DEPLOYMENT_TOKEN: ${STREAMSETS_CLOUD_DEPLOYMENT_TOKEN}
      SDC_JAVA_OPTS: -Dlog4j2.formatMsgNoLookups=true
    volumes:
      - ./data-transfer:/data-transfer
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    restart: unless-stopped
  #  ================================== RStudio ========================================== #
  rstudio:
    image: rocker/rstudio:4
    container_name: rstudio
    hostname: rstudio
    labels:
      com.platys.name: rstudio
      com.platys.webui.title: RStudio UI
      com.platys.webui.url: http://${PUBLIC_IP}:8787
    ports:
      - 8787:8787
    environment:
      PASSWORD: rstudio
      ROOT: 'True'
      DISABLE_AUTH: 'False'
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== InfluxDB 2 ========================================== #
  influxdb2:
    image: influxdb:2.1.1
    hostname: influxdb2
    container_name: influxdb2
    labels:
      com.platys.name: influxdb2
      com.platys.webui.title: InfluxDB 2.0 UI
      com.platys.webui.url: http://${PUBLIC_IP}:19999
      com.platys.restapi.title: InfluxDB 2.0 Rest API
      com.platys.restapi.url: http://${PUBLIC_IP}:19999/api/v2
    ports:
      - 19999:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: influx
      DOCKER_INFLUXDB_INIT_PASSWORD: abc123abc123!
      DOCKER_INFLUXDB_INIT_ORG: platys
      DOCKER_INFLUXDB_INIT_BUCKET: demo-bucket
      DOCKER_INFLUXDB_INIT_RETENTION: 1w
    volumes:
      - ./data-transfer:/data-transfer
    command: --reporting-disabled
    restart: unless-stopped
  #  ================================== Minio ========================================== #
  minio-1:
    image: minio/minio:RELEASE.2022-02-01T18-00-14Z
    container_name: minio-1
    hostname: minio-1
    labels:
      com.platys.name: minio
      com.platys.webui.title: MinIO UI
      com.platys.webui.url: http://${PUBLIC_IP}:9000
    ports:
      - 9000:9000
      - 9010:9010
    environment:
      MINIO_ROOT_USER: V42FCGRVMK24JJ8DHUYG
      MINIO_ROOT_PASSWORD: bKhWxVF3kQoLY9kFmt91l+tDrEoZjqnWXzY9Eza
      MINIO_REGION_NAME: us-east-1
      MINIO_BROWSER: 'True'
      #MINIO_PUBLIC_IPS: minio-1
      #MINIO_DOMAIN: minio.io
      #MINIO_DEFAULT_BUCKETS: 'admin-bucket,'
    volumes:
      - ./data-transfer:/data-transfer
    command: server /data --console-address ":9010"
    restart: unless-stopped
  #  ================================== Minio MC ========================================== #
  minio-mc:
    image: minio/mc:latest
    container_name: minio-mc
    hostname: minio-mc
    labels:
      com.platys.name: minio
    volumes:
      - ./data-transfer:/data-transfer
      - ./conf/minio/config.json:/root/.mc/config.json
    entrypoint:
      - /bin/sh
      - -c
      - |
        sleep 10
        mc mb --ignore-existing minio-1/admin-bucket
           for i in $$(echo "" | sed "s/,/ /g")
        do
          mc mb --ignore-existing minio-1/$$i
        done
        #
        while [ 1 -eq 1 ];do sleep 60;done
    restart: unless-stopped
  #  ================================== Grafana ========================================== #
  grafana:
    image: grafana/grafana:8.3.4
    hostname: grafana
    container_name: grafana
    labels:
      com.platys.name: grafana
      com.platys.webui.title: Grafana UI
      com.platys.webui.url: http://${PUBLIC_IP}:3000
    expose:
      - 3000
    ports:
      - 3000:3000
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=abc123!
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=
    volumes:
      - ./data-transfer:/data-transfer
      - ./plugins/grafana:/etc/grafana/provisioning
    restart: unless-stopped
  #  ================================== Wetty ========================================== #
  wetty:
    image: svenihoney/wetty:latest
    container_name: wetty
    hostname: wetty
    labels:
      com.platys.name: wetty
      com.platys.webui.title: WeTTY UI
      com.platys.webui.url: http://${PUBLIC_IP}:3001
    ports:
      - 3001:3000
    environment:
      - REMOTE_SSH_SERVER=${DOCKER_HOST_IP}
      - REMOTE_SSH_PORT=22
      - REMOTE_SSH_USER=
      - WETTY_PORT=3000
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== markdown-viewer ========================================== #
  markdown-viewer:
    image: trivadis/markdown-web:latest
    container_name: markdown-viewer
    hostname: markdown-viewer
    labels:
      com.platys.name: markdown-viewer
      com.platys.webui.title: Markdown Viewer UI
      com.platys.webui.url: http://${PUBLIC_IP}:80
    ports:
      - 80:80
    volumes:
      - ./artefacts:/home/python/markdown
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  markdown-renderer:
    image: trivadis/jinja2-renderer:latest
    container_name: markdown-renderer
    hostname: markdown-renderer
    labels:
      com.platys.name: markdown-renderer
    environment:
      USE_PUBLIC_IP: 'True'
      PUBLIC_IP: ${PUBLIC_IP}
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      DATAPLATFORM_HOME: ${DATAPLATFORM_HOME}
      PLATYS_PLATFORM_NAME: hslu-data-platform
      PLATYS_PLATFORM_STACK: trivadis/platys-modern-data-platform
      PLATYS_PLATFORM_STACK_VERSION: 1.14.0-preview
      PLATYS_COPY_COOKBOOK_DATA: 'True'
    volumes:
      - ./artefacts/templates:/templates
      - ./artefacts/templates:/scripts
      - .:/variables
      - ./artefacts:/output
      - ./data-transfer:/data-transfer
