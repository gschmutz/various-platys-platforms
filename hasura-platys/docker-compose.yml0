# =======================================================================
# Platform Name            hasura-platform
# Platform Stack:          trivadis/platys-modern-data-platform
# Platform Stack Version:  1.11.0-preview
# =======================================================================
version: '3.5'
networks:
  default:
    name: hasura-platform
# enforce some dependencies
services:
  #  ================================== PostgreSQL ========================================== #
  postgresql:
    image: postgres:13
    container_name: postgresql
    hostname: postgresql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=abc123!
      - POSTGRES_USER=demo
      - POSTGRES_DB=demodb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./data-transfer:/data-transfer
      - ./init/postgresql:/docker-entrypoint-initdb.d/
    restart: unless-stopped
  #  ================================== Presto ========================================== #
  hasura:
    image: hasura/graphql-engine:v1.4.0-alpha.1
    container_name: hasura
    hostname: hasura
    labels:
      com.platys.webui.title: Hasura UI
      com.platys.webui.url: http://${PUBLIC_IP}:28177
    ports:
      - 28177:8080
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://demo:abc123!@postgresql:5432/demodb

      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== markdown-viewer ========================================== #
  markdown-viewer:
    image: minimum/markdown-web:latest
    container_name: markdown-viewer
    hostname: markdown-viewer
    labels:
      com.platys.webui.title: Markdown Viewer UI
      com.platys.webui.url: http://${PUBLIC_IP}:80
    ports:
      - 80:80
    volumes:
      - ./documentation:/home/python/markdown
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  markdown-renderer:
    image: trivadis/jinja2-renderer:latest
    container_name: markdown-renderer
    hostname: markdown-renderer
    environment:
      USE_PUBLIC_IP: 'True'
      PUBLIC_IP: ${PUBLIC_IP}
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      DATAPLATFORM_HOME: ${DATAPLATFORM_HOME}
    volumes:
      - ./documentation/templates:/templates
      - ./documentation/templates:/scripts
      - .:/variables
      - ./documentation:/output
      - ./data-transfer:/data-transfer
